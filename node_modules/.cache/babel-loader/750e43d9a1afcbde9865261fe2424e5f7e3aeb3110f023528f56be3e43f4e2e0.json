{"ast":null,"code":"var _jsxFileName = \"/Users/indra/Documents/TechnoHacks/countdown/src/CountdownTimer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountdownTimer() {\n  _s();\n  const [time, setTime] = useState(0);\n  const [timerRunning, setTimerRunning] = useState(false);\n  useEffect(() => {\n    let interval = null;\n    if (timerRunning) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [timerRunning]);\n  const handleStart = () => {\n    setTimerRunning(true);\n  };\n  const handleReset = () => {\n    setTimerRunning(false);\n    setTime(0);\n  };\n  const handleRestart = () => {\n    setTimerRunning(true);\n    setTime(0);\n  };\n  const handleChange = e => {\n    setTime(parseInt(e.target.value, 10));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: time,\n      onChange: handleChange,\n      disabled: timerRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      disabled: timerRunning,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Time Remaining: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(CountdownTimer, \"VZ1BlkZac2u9wVpEl10ysO7XjXc=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountdownTimer","_s","time","setTime","timerRunning","setTimerRunning","interval","setInterval","prevTime","clearInterval","handleStart","handleReset","handleRestart","handleChange","e","parseInt","target","value","className","children","type","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/indra/Documents/TechnoHacks/countdown/src/CountdownTimer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CountdownTimer() {\n  const [time, setTime] = useState(0);\n  const [timerRunning, setTimerRunning] = useState(false);\n\n  useEffect(() => {\n    let interval = null;\n    if (timerRunning) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime - 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [timerRunning]);\n\n  const handleStart = () => {\n    setTimerRunning(true);\n  };\n\n  const handleReset = () => {\n    setTimerRunning(false);\n    setTime(0);\n  };\n\n  const handleRestart = () => {\n    setTimerRunning(true);\n    setTime(0);\n  };\n\n  const handleChange = (e) => {\n    setTime(parseInt(e.target.value, 10));\n  };\n\n  return (\n    <div className='container'>\n      <input\n        type=\"number\"\n        value={time}\n        onChange={handleChange}\n        disabled={timerRunning}\n      />\n      <button onClick={handleStart} disabled={timerRunning}>\n        Start\n      </button>\n      <button onClick={handleReset}>Reset</button>\n      <button onClick={handleRestart}>Restart</button>\n      <div>Time Remaining: {time}</div>\n    </div>\n  );\n}\n\nexport default CountdownTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,GAAG,IAAI;IACnB,IAAIF,YAAY,EAAE;MAChBE,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BJ,OAAO,CAAEK,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACrC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACH,QAAQ,CAAC;IACzB;IACA,OAAO,MAAMG,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBL,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBN,eAAe,CAAC,KAAK,CAAC;IACtBF,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1BP,eAAe,CAAC,IAAI,CAAC;IACrBF,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BX,OAAO,CAACY,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;EACvC,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MACEqB,IAAI,EAAC,QAAQ;MACbH,KAAK,EAAEf,IAAK;MACZmB,QAAQ,EAAER,YAAa;MACvBS,QAAQ,EAAElB;IAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF3B,OAAA;MAAQ4B,OAAO,EAAEjB,WAAY;MAACY,QAAQ,EAAElB,YAAa;MAAAe,QAAA,EAAC;IAEtD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3B,OAAA;MAAQ4B,OAAO,EAAEhB,WAAY;MAAAQ,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5C3B,OAAA;MAAQ4B,OAAO,EAAEf,aAAc;MAAAO,QAAA,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChD3B,OAAA;MAAAoB,QAAA,GAAK,kBAAgB,EAACjB,IAAI;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAACzB,EAAA,CAlDQD,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAoDvB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}